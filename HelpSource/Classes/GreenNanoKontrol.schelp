CLASS:: GreenNanoKontrol
SUMMARY:: for Korg nanoKONTROL v1
CATEGORIES:: Green>MIDI
RELATED:: Classes/GreenNanoKontrolGUI, Classes/GreenNanoKontrol2, Overviews/greenSysOverview

DESCRIPTION::
A class for dealing with this MIDI controller. Version 1 with 9 sliders, 9 knobs.

NOTE::
This assume scene #1, factory settings. Does not work for the other scenes or any custom CC mappings.
::

CLASSMETHODS::

METHOD:: ctrlSymbols
An LINK::Classes/Array:: of symbol keys for the left hand side control buttons. Mainly used internally for the GUI.


INSTANCEMETHODS::

PRIVATE:: prSetup

METHOD:: ctrl, knobs, sliders, buttonsH, buttonsL
Group of LINK::Classes/CV:: instances as an LINK::Classes/Array::.


EXAMPLES::

CODE::
g= GreenNanoKontrol();
g.debug= true;  //just post
g.debug= false;

g.cvs.keys;  //available keys

g.slider1.value;  //post CV value for slider1
g.cvs[\slider1].value;  //same thing

g.slider1.value= 0.5;  //seldom needed but value can also be set

g.slider1.action_({|cv, val| val.postln});  //note: using softSet so might need to wiggle

f= {|cv, val| (val*1000).postln};
g.slider1.addAction(f);  //several actions can be added
g.slider1.removeAction(f);  //and removed

g.buttonH1.value;  //top row, first column button - next to slider1
g.buttonH1.action_({|cv, val| ("buttonH1 changed value to"+val).postln});
g.buttonH1.value_(1);  //set also triggers the action
g.buttonH1.value_(0);
g.buttonL2.value;  //bottom row, second column button - next to slider2

g.gui;  //optional GUI

g.free;  //clean up responders and actions - important
::
